var toWav = require('audiobuffer-to-wav')

module.exports = function(){
	/*var conductor = new BandJS();
	conductor.setTimeSignature(4,4);
	conductor.setTempo(120);
	var piano = conductor.createInstrument();
	piano.note('quarter', 'C4');
    piano.note('quarter', 'D4');
    piano.note('quarter', 'E4');
    piano.note('quarter', 'F4');
    var player = conductor.finish();
    player.play();

    var context = conductor.audioContext;
    */
    var synth = new Tone.Synth().toMaster();

    //play a middle 'C' for the duration of an 8th note
    //synth.triggerAttackRelease("C4", "8n");
    var synth2 = new Tone.Synth({
        "oscillator" : {
            "type" : "pwm",
            "modulationFrequency" : 0.2
        },
        "envelope" : {
            "attack" : 0.02,
            "decay" : 0.1,
            "sustain" : 0.2,
            "release" : 0.9
        }
    }).toMaster();

    //synth2.triggerAttackRelease("D3", "8n");

    var cntxt = synth2.context;
    console.log(synth2);
    console.log(cntxt);
    var context_constants = cntxt._constants;
    var audiobuffer_source_node = context_constants[1];
    var buffer = audiobuffer_source_node.buffer;
    // console.log(cntxt._constants[1].buffer);
    console.log(buffer);

    saveData(buffer, "test.wav");
};

var saveData = (function(){
    var a = document.createElement("a");
    document.body.appendChild(a);
    a.style = "display: none";
    return function(audiobuffer, fileName){
        console.log(audiobuffer);

        //var buff = audiobuffer.getChannelData(audiobuffer.numberOfChannels - 1);
        var arrbuff = toWav(audiobuffer, {float32: true})
        console.log(arrbuff);

        var blob = new Blob([arrbuff], {"type": "audio/x-wav"});
        var url = window.URL.createObjectURL(blob);
        a.href = url;
        a.download = fileName;
        a.click();
        window.URL.revokeObjectURL(url);
    };
}());
