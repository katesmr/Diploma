var inherit = require("../utils/inherit");
var TabSegment = require("./TabSegment");
var BaseRange = require("../model/BaseRange");
var BaseOptionList = require("../model/BaseOptionList");
var SettingsList = require("../model/SettingsList");
var ProxyTrackManager = require("../model/ProxyTrackManager");
var Factory = require("./Factory");

module.exports = SettingView;

/**
 * Simple view with some data/widgets
 * @param track
 * @constructor
 */
function SettingView(track){
    TabSegment.call(this, "setting-view");

    this.track = null;

    this.table = $("<div class='two column stackable ui grid'>"); // create grid with two columns

    this.setTrack(track);

    this._build();
    this.show();
}

inherit(SettingView, TabSegment);

SettingView.prototype._build = function(){
    var container = this.getContainer();

    container.append(this.table);
};

SettingView.prototype.setTrack = function(track){
    if(track){
        this.track = track;
        ProxyTrackManager.updateSettingListFromTrack(SettingsList, this.track);
        this.createSettingTools(); // OR CREATE UPDATE METHOD FOR rangeElement AND dropDownElement ???
    }
};

SettingView.prototype.createSettingTools = function(){
    var i;
    var value;
    var options;
    var $element;
    var $elementName;
    var tokenSetting;
    var settingName;
    for(i = 0; i < SettingsList.list.length; ++i){
        tokenSetting = SettingsList.list[i];
        //tokenSetting.reset();
        options = tokenSetting.options;
        value = options.value; // BaseOption
        settingName = tokenSetting.name;
        $elementName = $("<div class='column'>" + settingName + "</div>");
        $element = this.createElement(settingName, value);
        this.table.append($elementName);
        this.table.append($element);
    }
};

SettingView.prototype.setEvent = function(settingName, value){
    console.log(this.track);
    ProxyTrackManager.setSetting(SettingsList, this.track, settingName, value);
};

SettingView.prototype.createElement = function(name, value){
    var $element;
    if(value instanceof BaseRange){
        // or ProxyTrackManager.set(list, track, optionName, value)
        $element = Factory.rangeElement("column " + name + "-range", name, value.min, value.max,
                                        this.setEvent.bind(this), value.step, value.value);
    } else if(value instanceof BaseOptionList){
        $element = Factory.dropDownElement("column " + name, name, value.options,
                                           this.setEvent.bind(this), value.value);
    }
    return $element;
};
