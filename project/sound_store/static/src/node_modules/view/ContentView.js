var inherit = require("../utils/inherit");
var BaseView = require("./BaseView");
var ProjectList = require("./ProjectList");

var eventListener = require("../model/eventListener");
var ProjectListController = require("../controller/ProjectListController");
var ProjectListModel = require("../model/ProjectListModel");
var Observer = require("observer");

module.exports = ContentView;

function ContentView(){
    BaseView.call(this, "content-view");

    this.projectListObserver = new Observer();
    this.projectListController = new ProjectListController(this.projectListObserver);
    this.projectListModel = new ProjectListModel();

    //this.projectModel = null;

    this.projectList = new ProjectList(this.projectListController);
    this.projectListController.attachModel(this.projectListModel);

    this._build();
}

inherit(ContentView, BaseView);

ContentView.prototype._build = function(){
    var container = this.getContainer();

    /*if (!eventListener.subscribe(eventListener.ON_SHOW_PROJECT_LIST, this.showProjectList.bind(this))){

        console.error("Unable to subscribe to", eventListener.ON_SHOW_PROJECT_LIST, "event!");
    }*/

    eventListener.subscribe(eventListener.ON_SHOW_PROJECT_LIST, this.showProjectList.bind(this));

    container.append(this.projectList.getContainer());

    this.showProjectList();

    this.appendToBlock($(".ui.container"));
};

ContentView.prototype.showProjectList = function(){
    this.hideAll();
    this.getContainer().append(this.projectList.getContainer());
    this.projectListController.fetchData();
    this.projectList.show();
};

ContentView.prototype.hideAll = function(){
    this.projectList.hide();
    //this.trackComponentView.hide();
};

/*ContentView.prototype.showCurrentProject = function(eventName, projectName){
    this.hideAll();
    //this.projectModel = new ProjectModel(projectName);
    //this.projectModel.fetchProject();
    this.getContainer().append(this.trackComponentView.getContainer());
    this.trackComponentView.show();
};*/
