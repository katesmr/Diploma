var inherit = require("../utils/inherit");
var BaseWindow = require("./BaseWindow");
var TrackDataView = require("./TrackDataView");
var Factory = require("./Factory");
var commonEventNames = require("../core/commonEventNames");
var windowsTransport = require("./windowsTransport");

module.exports = TrackListView;

function TrackListView(controller){
    BaseWindow.call(this, controller, "project-component-view");

    this.projectName = $("<h1></h1>");
    this.addTrackButton = Factory.createIconButton("circular ui icon button add", "plus icon", "");
    this.trackList = $("<div class='track-list'>");
    this.__onRemoveButtonClicked = onRemoveButtonClicked.bind(this);

    this.selectedItem = null;

    this._build();
    this.hide();
}

inherit(TrackListView, BaseWindow);

TrackListView.prototype._build = function(){
    var self = this;
    var container = this.getContainer();

    //this.projectName.text(this.controller.model.name);

    this.controller.observer.subscribe(commonEventNames.E_ITEM_ADDED, function(eventName, index){
        var element = self.controller.model.at(index);
        self.add(element);
    });

    this.controller.observer.subscribe(commonEventNames.E_ITEM_REMOVED, function(eventName, index){
        var element;
        if(self.selectedItem === null){
            // case when clear all item (them don't selected) in table
            console.log("---");
            element = self.controller.model.at(index);
            console.log(element);
            self.remove(element.id);
        } else{
            // case when remove one selected item
            self.remove(self.selectedItem.attr("id"));
            self.selectedItem = null;
        }
    });

    this.addTrackButton.on("click", function(event){
        self.controller.add({});
    });

    windowsTransport.subscribe(commonEventNames.ON_BACK_BUTTON_CLICK, function(){
        if (self.controller.model.isEmpty()){
            // Nothing to save, model is just in default state...
            windowsTransport.notify(commonEventNames.E_ACTIVATE_WINDOW, "projectList");
        } else {
            self.controller.save(function(result){
                if (result instanceof Error){
                    // Can't save...
                } else {
                    self.controller.model.clear();
                    // Project saved!
                    windowsTransport.notify(commonEventNames.E_ACTIVATE_WINDOW, "projectList");
                    console.log("back");
                }
            });
        }
    });

    container.append(this.projectName);
    container.append(this.trackList);
    container.append(this.addTrackButton);
};


TrackListView.prototype.confirmed = function(name){
    // !!!!!!!!
    this.controller.removeById(this.selectedItem.attr("id"));
};

TrackListView.prototype.declined = function(name){
    this.selectedItem = null;
};

TrackListView.prototype.add = function(track){
    var id = track.id;
    var $instrumentContainer = $("<div class='track-" + id + "'>");
    var trackDataView = new TrackDataView(track.instrument, track.length, track.getContext());
    var $deleteTrackButton = Factory.deleteCircleButton(id, this.__onRemoveButtonClicked);
    $instrumentContainer.append(trackDataView.getContainer());
    $instrumentContainer.append($deleteTrackButton);
    this.trackList.append($instrumentContainer);
};

TrackListView.prototype.remove = function(id){
    $(".track-" + id).remove();
};

function onRemoveButtonClicked($element){
    if (this.selectedItem === null){
        this.selectedItem = $element;
        windowsTransport.notify(commonEventNames.E_SHOW_MODAL, "teeest");
    }
}
