//TrackComponentView
var inherit = require("../utils/inherit");
var Factory = require("./Factory");
var BaseView = require("./BaseView");
var WaveForm = require("./WaveForm");
var InstrumentView = require("./InstrumentView");
var eventListener = require("../model/eventListener");

module.exports = TrackView;

function TrackView(){
    BaseView.call(this, "track-view");

    this.waveform = null;
    this.instrumentView = null;

    this._build();
}

inherit(TrackView, BaseView);

TrackView.prototype._build = function(){
    //eventListener.subscribe("SHOW_TRACK", this._fetchSoundData.bind(this));

    this.getContainer().append(this.instrumentView);
    this.getContainer().append(this.waveform);
};

TrackView.prototype.createInstrument = function(imageSource, title){
    this.instrumentView = new InstrumentView(imageSource, title);
    this.getContainer().append(this.instrumentView);
};

TrackView.prototype.createWaveForm = function(data){
    this.waveform = new WaveForm();
    if(data instanceof Blob){
        this.waveform.createWaveFormFromFile(data);
    } else if(data instanceof AudioContext){
        this.waveform.createWaveForm(data);
    }
    this.getContainer().append(this.waveform);
};
