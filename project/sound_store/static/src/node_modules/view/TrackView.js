var inherit = require("../utils/inherit");
var BaseWindow = require("./BaseWindow");
var FilterView = require("./FilterView");
var SettingView = require("./SettingView");
var Factory = require("./Factory");
var commonEventNames = require("../core/commonEventNames");
var windowsTransport = require("./windowsTransport");

module.exports = TrackView;

function TrackView(controller){
    BaseWindow.call(this, controller, "track-view");

    this.title = ""; //this.track.instrument; // instrument name

    this.waveform = $("<div class='wave-form'></div>");
    this.tabBlock = $("<div class='ui top attached tabular menu'>");

    this.settingTabSegment = new SettingView(null);
    this.filterTabSegment = new FilterView(null);

    this.settingTitle = $("<a class='item active' data-tab='" + this.settingTabSegment.dataTab + "'>setting</a>");
    this.filterTitle = $("<a class='item active' data-tab='" + this.filterTabSegment.dataTab + "'>filter</a>");

    this._build();
    this.hide();
    this.showTabMenu();
}

inherit(TrackView, BaseWindow);

TrackView.prototype._build = function(){
    var self = this;
    var container = this.getContainer();

    this.settingTabSegment.setActive(); // set Setting tab in active state

    this.controller.observer.subscribe(commonEventNames.E_SET_TRACK, setTrack.bind(this));

    container.append(this.waveform);
    this.tabBlock.append(this.settingTitle);
    this.tabBlock.append(this.filterTitle);
    container.append(this.tabBlock);
    container.append(this.settingTabSegment.getContainer());
    container.append(this.filterTabSegment.getContainer());
};

TrackView.prototype.showTabMenu = function(){
    this.tabBlock.tab();
};

TrackView.prototype.back = function(){
    this.settingTabSegment.table.empty();
    windowsTransport.notify(commonEventNames.E_ACTIVATE_WINDOW, "trackList");
};



function setTrack(eventName, track){
    this.settingTabSegment.setTrack(track);
    this.filterTabSegment.setTrack(track);
}
