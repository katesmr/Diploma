//TrackComponentView
var inherit = require("../utils/inherit");
var AudioHelper = require("../utils/AudioHelper");
var BaseView = require("./BaseView");
var WaveForm = require("./WaveForm");
var InstrumentView = require("./InstrumentView");
var eventListener = require("../model/eventListener");

module.exports = TrackView;

function TrackView(trackModel){
    BaseView.call(this, "track-view");

    this.waveform = null;
    this.instrumentView = null;

    this.trackModel = trackModel;

    this._build(trackModel);
}

inherit(TrackView, BaseView);

TrackView.prototype._build = function(trackModel){
    //eventListener.subscribe("SHOW_TRACK", this._fetchSoundData.bind(this));
    //eventListener.notify("SHOW_TRACK");
    /*this.getContainer().append(this.instrumentView);
    this.getContainer().append(this.waveform);*/

    this.createInstrument();
    this.createWaveForm();
};

TrackView.prototype.createInstrument = function(){
    this.instrumentView = new InstrumentView(this.trackModel.name, this.trackModel.instrument);
    this.getContainer().append(this.instrumentView.getContainer());
};

TrackView.prototype.createWaveForm = function(){
    //var data = this.trackModel.getContext();
    console.log("data");
    var data = AudioHelper.AudioContextToBlob(this.trackModel.getConstants());
    this.waveform = new WaveForm();
    this.getContainer().append(this.waveform.getContainer());
    if(data instanceof Blob){
        this.waveform.createWaveFormFromFile(data);
    } else if(data instanceof AudioContext){
        this.waveform.createWaveForm(data);
    }
};
