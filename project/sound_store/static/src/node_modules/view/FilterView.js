var inherit = require("../utils/inherit");
var ToolView = require("./ToolView");
var FiltersList = require("../model/FiltersList");
var ProxyTrackManager = require("../model/ProxyTrackManager");
var Factory = require("./Factory");

module.exports = FilterView;

function FilterView(filter){
    ToolView.call(this, "filter-view", "two column stackable ui grid");

    this.filter = null;

    this.setFilter(filter);

    this._build();
    this.show();
}

inherit(FilterView, ToolView);

FilterView.prototype.resetFilters = function(){
    ProxyTrackManager.resetFilters(FiltersList);
};

FilterView.prototype.setFilter = function(track){
    if(track){
        this.filter = track.postSettings;
        ProxyTrackManager.updateFilterListFromFilter(FiltersList, this.filter.getPostSettings());
        this.createFilterTools();
    }
};

FilterView.prototype.createFilterTools = function(){
    var i;
    var value;
    var options;
    var filterName;
    var optionName;
    var tokenFilter;
    var $element;
    var $elementName;
    var $mainDiv;
    var $checkBox;
    var $settingDiv;
    for(i = 0; i < FiltersList.list.length; ++i){
        tokenFilter = FiltersList.list[i];
        options = tokenFilter.options;
        filterName = tokenFilter.name;
        // create main div for checkbox component and div with settings
        $mainDiv = $("<div class='column " + filterName + "'>");
        $settingDiv = $("<div class='filter-setting-" + filterName + "'>");
        // create widgets for settings
        for(optionName in options){
            value = options[optionName]; // BaseOption
            $elementName = $("<label>" + optionName + "</label>");
            $element = this.createElement(optionName, optionName, value);
            $settingDiv.append($elementName);
            $settingDiv.append($element);
        }
        if(tokenFilter.isEnabled === true){
            $settingDiv.show();
        } else {
            $settingDiv.hide();
        }
        $checkBox = Factory.createCheckBox(filterName, filterName, filterName, checkEvent.bind(this),
                                           uncheckEvent.bind(this), tokenFilter.isEnabled);
        $mainDiv.append($checkBox);
        $mainDiv.append($settingDiv);
        this.table.append($mainDiv);
    }
};

FilterView.prototype.setEvent = function(optionName, value){
    ProxyTrackManager.setFilter(FiltersList, this.filter, optionName, value);
};

function checkEvent(filterName, isChecked){
    this.table.find(".filter-setting-" + filterName).show();
    ProxyTrackManager.addFilter(FiltersList, this.filter, filterName, isChecked);
}

function uncheckEvent(filterName, isChecked){
    this.table.find(".filter-setting-" + filterName).hide();
    ProxyTrackManager.addFilter(FiltersList, this.filter, filterName, isChecked);
}
