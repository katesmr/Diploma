//MessageModal
var inherit = require("../utils/inherit");
var BaseView = require("./BaseView");
var Factory = require("./Factory");
var eventListner = require("../model/eventListener");
var Observer = require("observer");
var commonEventNames = require("../core/commonEventNames");

module.exports = MessageModal;

/**
 * @param {String} message
 */
function MessageModal(message){
    BaseView.call(this, "ui modal");
    this.text = $("<p></p>");
    this.message = message;
    this.okButton = Factory.createButton("ui button", "ok");
    this.cancelButton = Factory.createButton("ui button", "cancel");
    this.observer = new Observer();

    this._build();
}

inherit(MessageModal, BaseView);

MessageModal.prototype._build = function(){
    var container = this.getContainer();
    var self = this;

    this.okButton.on("click", function(event){
        self.observer.notify(commonEventNames.E_CONFIRMED, null);
        self.hide();
    });

    this.cancelButton.on("click", function(event){
        self.observer.notify(commonEventNames.E_DECLINED, null);
        self.hide();
    });

    container.append(this.text);
    container.append(this.okButton);
    container.append(this.cancelButton);
};

MessageModal.prototype.show = function(){
    this.text.text(this.message);
    this.getContainer().append(this.text);
    this.getContainer().modal("show");
};

MessageModal.prototype.hide = function(){
    this.getContainer().modal("hide");
};
