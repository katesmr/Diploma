//MessageModal
var inherit = require("../utils/inherit");
var BaseView = require("./BaseView");
var Factory = require("./Factory");
var eventListner = require("../model/eventListener");

module.exports = MessageModal;

/**
 * @param {String} message
 */
function MessageModal(message, eventNameSubscribe, eventNameNotify){
    BaseView.call(this, "ui modal");
    this.name = null;
    this.text = $("<p></p>");
    this.message = message;
    this.okButton = Factory.createButton("ui button", "ok");
    this.cancelButton = Factory.createButton("ui button", "cancel");

    this._build(eventNameSubscribe, eventNameNotify);
}

inherit(MessageModal, BaseView);

MessageModal.prototype._build = function(eventNameSubscribe, eventNameNotify){
    var container = this.getContainer();

    //eventListner.subscribe(eventNameSubscribe, this.show.bind(this));
    var self = this;

    this.okButton.on("click", function(event){
        console.log("in mm " + self.name);
        eventListner.notify(eventNameNotify, self.name);
        self.getContainer().modal("hide");
    });

    this.cancelButton.on("click", function(event){
        self.getContainer().modal("hide");
    });

    container.append(this.text);
    container.append(this.okButton);
    container.append(this.cancelButton);
};

MessageModal.prototype.show = function(name){
    console.log("+");
    this.name = name;
    this.text.text(this.message +  " " + this.name);
    this.getContainer().append(this.text);
    this.getContainer().modal("show");
};
