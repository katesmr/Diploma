//TrackComponentView
var inherit = require("../utils/inherit");
var Factory = require("./Factory");
var BaseView = require("./BaseView");
var TrackView = require("./WaveForm");
var RequestManager = require("../RequestManager");
var eventListener = require("../model/eventListener");

module.exports = TrackComponentView;

/*
    wait:
    {"synth": TrackObject, "noise": TrackObject, "oscillator": TrackObject}
    or
    {"synth": TrackObject} ....
    TrackObject.context
 */
function TrackComponentView(trackObjectComponent){
    BaseView.call(this, "track-component-view");

    this.components = [];
    this.imageSourceList = []; // init with hardcode
    this.trackObjectComponent = trackObjectComponent;

    this._build();
}

inherit(TrackComponentView, BaseView);

TrackComponentView.prototype._build = function(){

};

TrackComponentView.prototype.createTrackViewList = function(){
    var key;
    var object;
    for(key in this.trackObjectComponent){
        object = new TrackView();
        //object.createInstrument(null, key);
        //object.createWaveForm(this.trackObjectComponent[key]);
        this.components.push(object);
    }
};
