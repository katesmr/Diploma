var inherit = require("../utils/inherit");
var Factory = require("./Factory");
var BaseView = require("./BaseView");

module.exports = PlayerView;

function PlayerView(){
    BaseView.call(this, "player");

    this.playButtonContainer = $("<div class='play-button-container'></div>");
    this.saveButtonContainer = $("<div class='save-button-container'></div>");

    this.playButton = Factory.createIconButton("ui button", "play icon", "");
    this.pauseButton = Factory.createIconButton("ui button", "pause icon", "");
    this.stopButton = Factory.createIconButton("ui button", "stop icon", "");
    this.prevButton = Factory.createIconButton("ui button", "step backward icon", "");
    this.nextButton = Factory.createIconButton("ui button", "step forward icon", "");

    this.addButton = Factory.createButton("add"); // save to store
    this.saveButton = Factory.createButton("save"); // save only chosen track
    this.saveAllButton = Factory.createButton("save all"); // separate of each other
    this.mergeAllButton = Factory.createButton("merge all"); // merge all track in one and save it

    this._build();
    this.appendToBlock(".ui.container");

}

inherit(PlayerView, BaseView);

PlayerView.prototype._build = function(){

    this.playButtonContainer.append(this.prevButton);
    this.playButtonContainer.append(this.playButton);
    this.playButtonContainer.append(this.pauseButton);
    this.playButtonContainer.append(this.stopButton);
    this.playButtonContainer.append(this.nextButton);

    this.saveButtonContainer.append(this.addButton);
    this.saveButtonContainer.append(this.saveButton);
    this.saveButtonContainer.append(this.saveAllButton);
    this.saveButtonContainer.append(this.mergeAllButton);

    this._container.append(this.playButtonContainer);
    this._container.append(this.saveButtonContainer);
};

PlayerView.prototype.playButtonBind = function(){
    var self = this;
    this.playButton.on("click", function(event){

    });
};
