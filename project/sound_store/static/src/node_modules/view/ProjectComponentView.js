//TrackComponentView
var inherit = require("../utils/inherit");
var BaseView = require("./BaseView");
var TrackView = require("./TrackView");
var Factory = require("./Factory");
var eventListener = require("../model/eventListener");

module.exports = ProjectComponentView;

function ProjectComponentView(){
    BaseView.call(this, "project-component-view");

    this.components = [];
    this.projectName = null;
    this.addProjectButton = Factory.createIconButton("circular ui icon button", "plus icon", "");

    this._build();
    this.hide();
}

inherit(ProjectComponentView, BaseView);

ProjectComponentView.prototype._build = function(){
    var container = this.getContainer();
    container.empty();
    container.append(this.projectName);
    eventListener.subscribe(eventListener.PROJECT_MODEL_UPDATED, this.initProjectComponentView.bind(this));
};

ProjectComponentView.prototype.initProjectComponentView = function(eventName, project){
    this.projectName = $("<h1>" + project.projectName + "</h1>");
    this.getContainer().append(this.projectName);
    this.createTrackViewList(project);
};

ProjectComponentView.prototype.createTrackViewList = function(project){
    var track;
    var trackView;
    for(track in project.trackModelList){
        trackView = new TrackView(project.trackModelList[track]);
        this.getContainer().append(trackView.getContainer());
        this.components.push(trackView);
    }
};
