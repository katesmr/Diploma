var inherit = require("../utils/inherit");
var BaseWindow = require("./BaseWindow");
var TrackDataView = require("./TrackDataView");
var Factory = require("./Factory");
var commonEventNames = require("../core/commonEventNames");
var windowsTransport = require("./windowsTransport");

module.exports = ProjectComponentView;

function ProjectComponentView(controller){
    BaseWindow.call(this, controller, "project-component-view");

    this.projectName = $("<h1></h1>");
    this.addTrackButton = Factory.createIconButton("circular ui icon button add", "plus icon", "");
    this.trackList = $("<div class='track-list'>");

    this.selectedItem = null;

    this._build();
    this.hide();
}

inherit(ProjectComponentView, BaseWindow);

ProjectComponentView.prototype._build = function(){
    var self = this;
    var container = this.getContainer();

    this.controller.observer.subscribe(commonEventNames.E_ITEM_ADDED, function(eventName, index){
        var element = self.controller.model.at(index);
        self.add(element);
    });

    this.controller.observer.subscribe(commonEventNames.E_ITEM_REMOVED, function(eventName, index){
        self.remove(self.selectedItem.attr("id"));
        self.selectedItem = null;
    });

    this.addTrackButton.on("click", function(event){
        self.controller.add(4, null);
    });

    container.append(this.projectName);
    container.append(this.trackList);
    container.append(this.addTrackButton);
};


ProjectComponentView.prototype.confirmed = function(name){
    // !!!!!!!!
    this.controller.remove(this.selectedItem.attr("id"));
};

ProjectComponentView.prototype.declined = function(name){
    this.selectedItem = null;
};

ProjectComponentView.prototype.add = function(track){
    var $instrumentContainer = $("<div class='track-" + track.id + "'>");
    var trackDataView = new TrackDataView(track.instrument, track.length, track.getContext());
    var $deleteTrackButton = Factory.deleteCircleButton(track.id, this.onRemoveButtonClicked.bind(this));
    $instrumentContainer.append(trackDataView.getContainer());
    $instrumentContainer.append($deleteTrackButton);
    this.trackList.append($instrumentContainer);
};

ProjectComponentView.prototype.remove = function(id){
    $(".track-" + id).remove();
};

ProjectComponentView.prototype.onRemoveButtonClicked = function($element){
    if (this.selectedItem === null){
        this.selectedItem = $element;
        windowsTransport.notify(commonEventNames.E_SHOW_MODAL, "teeest");
    }
};
