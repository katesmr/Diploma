var inherit = require("../utils/inherit");
var BaseView = require("./BaseView");
var PianoModel = require("../model/PianoModel");

module.exports = InstrumentView;

function InstrumentView(track){
    BaseView.call(this, "instrument-view");
    this.track = track;
    this.instrument = null;
    this.instrumentModel = null;
    this.setInstrument();
}

inherit(InstrumentView, BaseView);

InstrumentView.prototype._build = function(){
    var container = this.getContainer();

    container.append(this.instrument);
};

InstrumentView.prototype.setInstrument = function(){
    switch(this.track.instrument){
        case "synth":
            this.instrumentModel = new PianoModel("piano");
            this.instrument = this.instrumentModel.piano();
            break;
        case "oscillator":
            break;
    }
};

InstrumentView.prototype.keyDownEvent = function(pressedKey){
    console.log(this.instrumentModel);
    this.instrumentModel.setColorToKey(pressedKey, "grey");  // EDIT
    // get note from className
    // var note = $(className).find(".note").text();
    // this.track.playComponent(note);

};

InstrumentView.prototype.keyUpEvent = function(upKey){
    this.instrumentModel.setColorToKey(upKey, "")
};

InstrumentView.prototype.playEvent = function(note){
    this.track.playComponent(note);
};

