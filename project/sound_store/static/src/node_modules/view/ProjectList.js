var inherit = require("../utils/inherit");
var BaseView = require("./BaseView");
var eventListener = require("../model/eventListener");

module.exports = ProjectList;

function ProjectList(){
    BaseView.call(this, "project-list");

    this.projectList = null;

    this._build();
    this.hide();
}

inherit(ProjectList, BaseView);

ProjectList.prototype._build = function(){
    eventListener.subscribe(eventListener.PROJECT_LIST_MODEL_UPDATED, this.updateProjectListElement.bind(this));
    this.getContainer().append(this.projectList);
    // eventListener.subscribe("ON_SHOW_PROJECT_LIST", this.fetchProjectList.bind(this));
};


ProjectList.prototype.updateProjectListElement = function(eventName, projectListModel){
    var container = this.getContainer();
    // Clear (possibly) old project list:
    container.empty();
    //this.projectListModel.fetchData();
    console.log(projectListModel.projectNameList);
    this.projectList = this.createGridData(projectListModel.projectNameList);
    // Add new one:
    container.append(this.projectList);
};


ProjectList.prototype.createGridData = function(titleList, callback){
    var i;
    var title;
    var $item;
    var $column;
    var projectName;
    var $table = $("<div class='five column stackable ui grid'>");
    for(i = 0; i < titleList.length; ++i){
        title = titleList[i];
        $item = $("<a id='" + title + "'>" + title +"</a>");
        $item.on("click", function(event){
            projectName = $(this).attr("id");
            eventListener.notify(eventListener.SHOW_PROJECT, projectName);
            console.log(projectName);
        });
        $column = $("<div class='column'>");
        $column.append($item);
        $table.append($column);
    }
    return $table;
};
