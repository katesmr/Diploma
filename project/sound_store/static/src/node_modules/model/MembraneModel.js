var BaseDrumModel = require("./BaseDrumModel");
var DrumRecorder = require("./DrumRecorder");
var inherit = require("../utils/inherit");

module.exports = MembraneModel;

function MembraneModel(playSetting){
    BaseDrumModel.call(this, playSetting);
    this.note = null;
}

inherit(MembraneModel, BaseDrumModel);

MembraneModel.prototype._generate = function(){
    return new Tone.MembraneSynth(this.setting).toMaster();
};

MembraneModel.prototype.play = function(){
    var i;
    for(i =0; i < this.playObjects.length; ++i){
        this.playObjects[i].play(this.trackObject);
    }
};

MembraneModel.prototype.playNow = function(){
    this.trackObject.triggerAttack(this.note);
};

MembraneModel.prototype.playAll = function(){
    var token;
    for(token in this.playSetting){
        this.play(this.playSetting[token].note, this.playSetting[token].startTime);
    }
};

MembraneModel.prototype.createPlayObject = function(note, startTime){
    this.playObjects.push(new DrumRecorder(note, startTime));
};

MembraneModel.prototype.createPlayObjects = function(){
    var i, tokenPlaySetting;
    for(i = 0; i < this.playSetting.length; ++i){
        tokenPlaySetting = this.playSetting[i];
        this.createPlayObject(tokenPlaySetting.note, tokenPlaySetting.startTime);
    }
};
