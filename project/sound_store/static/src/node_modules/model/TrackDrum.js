// TrackDrum

var BaseTrackModel = require("./BaseTrackModel");
var inherit = require("../utils/inherit");
var MembraneModel = require("./MembraneModel");
var TrackPlayer = require("./TrackPlayer");

module.exports = TrackDrum;

// @param {String} name
// @param {Object} source
function TrackDrum(id, data){
    BaseTrackModel.call(this, id, data);
    this.drums = data.drums || {};
    this.drumObjects = {};
}

inherit(TrackDrum, BaseTrackModel);

TrackDrum.prototype._generate = function(){
    return new Tone.Oscillator(this.setting).toMaster();
};

TrackDrum.prototype.createDrumObject = function(drum){
    switch(drum){
        case "kick-left":
            this.drumObjects[drum] = new MembraneModel();
            break;
        case "":
            this.drumObjects[drum] = new TrackPlayer();
            break;
    }
};

TrackDrum.prototype.getData = function(){
    var result = {};
    result.instrument = this.instrument;
    result["post-setting"] = this.postSettings.getPostSettings();
    result["drums"] = this.getDrumObjectsData();
    return result;
};

TrackDrum.prototype.setSetting = function(){
    if(this.trackObject){
        if(this.setting === undefined){
            this.setting = {};
        }
        this.setting.valume = this.getVolume();
        this.setting.frequency = this.getFrequency();
        this.setting.type = this.getType();
    }
};

TrackPlayer.prototype.getDrumObjectsData = function(){
    var drum;
    var result = {};
    for(drum in this.drumObjects){
        result[drum] = this.drumObjects[drum].getData();
    }
    return result;
};

