var ObservableList = require("./ObservableList");
var inherit = require("../utils/inherit");
var TrackSynthesizer = require("./TrackSynthesizer");
var TrackNoise = require("./TrackNoise");
var generateUID = require("../core/generateUID");

module.exports = ProjectModel;

/**
 * @param project - object
 * @constructor
 */
function ProjectModel(project){
    ObservableList.call(this);
    this.name = project.name;
    this.id = project.id;
    this.default = {
        "id": -generateUID(),
        "data": {
            "instrument": "synth",
            "setting": {},
            "play-setting": [],
            "length": 1
        }
    };
}

inherit(ProjectModel, ObservableList);

/**
 * @param source = object -
 */
ProjectModel.prototype.add = function(source){
    var element = source || this.default;
    var data = element.data;
    console.log("model add");
    console.log(element);
    var track;
    var item = {};
    var instrument = data.instrument;
    if(instrument === "synth"){
        track = new TrackSynthesizer(data);
    } else if(instrument === "noise"){
        track = new TrackNoise(data);
    }
    if (track){
        item.id = element.id;
        item.track = track;
        ObservableList.prototype.add.call(this, item);
    }
};

ProjectModel.prototype.isEmpty = function(){
    return this.name.length && this.id === 0 && this.__data.length;
};
