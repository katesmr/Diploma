var AudioHelper = require("./AudioHelper");

module.exports = TrackManager;

function TrackManager(){}

// get array with Tone.Synth
TrackManager.mergeTracks = function(bufferList){
    var i;
    var nextBuffer;
    var currentBuffer = bufferList[0];
	for(i = 1; i < bufferList.length; ++i){
        nextBuffer = bufferList[i];
        // put new AudioBuffer where created from merging of past tracks
        currentBuffer = AudioHelper.merge(currentBuffer, nextBuffer);
	}
	return currentBuffer;
};

TrackManager.save = (function(){
    var a = document.createElement("a");
    document.body.appendChild(a);
    a.style = "display: none";
    return function(data, fileName){
        if(fileName === undefined){
            fileName = "test.wav";
        }
        var blob;
        var buffer;
        if(data instanceof AudioBuffer){
            blob = AudioHelper.AudioBufferToBlob(data);
        } else{
            buffer = AudioHelper.getAudioContextBuffer(data.context);
            blob = new Blob([buffer], {"type": "audio/x-wav"});
        }
        var url = window.URL.createObjectURL(blob);
        a.href = url;
        a.download = fileName;
        a.click();
        window.URL.revokeObjectURL(url);
    };
}());
